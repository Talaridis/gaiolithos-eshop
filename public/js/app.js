/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//theme  ---mporei n figi\n// require('./bootstrap');\n//theme\n__webpack_require__(/*! ../theme/js/app */ \"./resources/theme/js/app.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwLmpzPzZkNDAiXSwibmFtZXMiOlsicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUdBO0FBQ0FBLG1CQUFPLENBQUMsb0RBQUQsQ0FBUCIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9hcHAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL3RoZW1lICAtLS1tcG9yZWkgbiBmaWdpXG4vLyByZXF1aXJlKCcuL2Jvb3RzdHJhcCcpO1xuXG5cbi8vdGhlbWVcbnJlcXVpcmUoJy4uL3RoZW1lL2pzL2FwcCcpO1xuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz8wZTE1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL3Nhc3MvYXBwLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ }),

/***/ "./resources/theme/js/app.js":
/*!***********************************!*\
  !*** ./resources/theme/js/app.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Theme: Hyper - Responsive Bootstrap 4 Admin Dashboard\n * Author: Coderthemes\n * Module/App: Layout Js\n */\n\n/**\n * LeftSidebar\n * @param {*} $\n */\n!function ($) {\n  'use strict';\n\n  var LeftSidebar = function LeftSidebar() {\n    this.body = $('body'), this.window = $(window), this.menuContainer = $('#left-side-menu-container');\n  };\n  /**\n   * Reset the theme\n   */\n\n\n  LeftSidebar.prototype._reset = function () {\n    this.body.removeAttr('data-leftbar-theme');\n  },\n  /**\n   * Activates the condensed side bar\n   */\n  LeftSidebar.prototype.activateCondensedSidebar = function () {\n    this.body.attr('data-leftbar-compact-mode', 'condensed');\n  },\n  /**\n   * Deactivates the condensed side bar\n   */\n  LeftSidebar.prototype.deactivateCondensedSidebar = function () {\n    this.body.removeAttr('data-leftbar-compact-mode');\n  },\n  /**\n   * Activates the scrollable sidenar\n   */\n  LeftSidebar.prototype.activateScrollableSidebar = function () {\n    this.body.attr('data-leftbar-compact-mode', 'scrollable');\n  },\n  /**\n   * Deactivates the scrollbar\n   */\n  LeftSidebar.prototype.deactivateScrollableSidebar = function () {\n    this.body.removeAttr('data-leftbar-compact-mode');\n  },\n  /**\n   * Activates the default theme\n   */\n  LeftSidebar.prototype.activateDefaultTheme = function () {\n    this._reset();\n  },\n  /**\n   * Activates the light theme\n   */\n  LeftSidebar.prototype.activateLightTheme = function () {\n    this._reset();\n\n    this.body.attr('data-leftbar-theme', 'light');\n  },\n  /**\n   * Activates the dark theme\n   */\n  LeftSidebar.prototype.activateDarkTheme = function () {\n    this._reset();\n\n    this.body.attr('data-leftbar-theme', 'dark');\n  },\n  /**\n   * Initilizes the menu\n   */\n  LeftSidebar.prototype.initMenu = function () {\n    var self = this; // resets everything\n\n    this._reset(); // sidebar - main menu\n\n\n    $('.side-nav').metisMenu(); // click events\n    // Left menu collapse\n\n    $(document).on('click', '.button-menu-mobile', function (e) {\n      e.preventDefault();\n      self.body.toggleClass('sidebar-enable'); // if (self.window.width() >= 768) {\n      //   self.body.toggleClass('enlarged');\n      // } else {\n      //   self.body.removeClass('enlarged');\n      // }\n    }); // activate the menu in left side bar based on url\n\n    $('.side-nav a').each(function () {\n      var pageUrl = window.location.href.split(/[?#]/)[0];\n\n      if (this.href == pageUrl) {\n        $(this).addClass('active');\n        $(this).parent().addClass('mm-active'); // add active to li of the current link\n\n        $(this).parent().parent().addClass('mm-show');\n        $(this).parent().parent().prev().addClass('active'); // add active class to an anchor\n\n        $(this).parent().parent().parent().addClass('mm-active');\n        $(this).parent().parent().parent().parent().addClass('mm-show'); // add active to li of the current link\n\n        $(this).parent().parent().parent().parent().parent().addClass('mm-active');\n        $(this).parent().parent().parent().parent().parent().parent().addClass('mm-show');\n        $(this).parent().parent().parent().parent().parent().parent().parent().addClass('mm-active'); // add active to li of the current link\n      }\n    });\n  },\n  /**\n   * Initilizes the menu\n   */\n  LeftSidebar.prototype.init = function () {\n    this.initMenu();\n  }, $.LeftSidebar = new LeftSidebar(), $.LeftSidebar.Constructor = LeftSidebar;\n}(window.jQuery),\n/**\n * Topbar\n * @param {*} $\n */\nfunction ($) {\n  'use strict';\n\n  var Topbar = function Topbar() {\n    this.$body = $('body'), this.$window = $(window);\n  };\n  /**\n   * Initilizes the menu\n   */\n\n\n  Topbar.prototype.initMenu = function () {\n    if ($('.topnav-menu').length) {\n      $('.topnav-menu li a').each(function () {\n        var pageUrl = window.location.href.split(/[?#]/)[0];\n\n        if (this.href == pageUrl) {\n          $(this).addClass('active');\n          $(this).parent().parent().addClass('active'); // add active to li of the current link\n\n          $(this).parent().parent().parent().parent().addClass('active');\n          $(this).parent().parent().parent().parent().parent().parent().addClass('active');\n        }\n      }); // Topbar - main menu\n\n      $('.navbar-toggle').on('click', function () {\n        $(this).toggleClass('open');\n        $('#navigation').slideToggle(400);\n      });\n    }\n  }, // init search\n  Topbar.prototype.initSearch = function () {\n    // Serach Toggle\n    var navDropdowns = $('.navbar-custom .dropdown:not(.app-search)'); // hide on other click\n\n    $(document).on('click', function (e) {\n      if ($(e.target).closest('#search-dropdown').length === 0) {\n        $('#search-dropdown').removeClass('d-block');\n      }\n\n      return true;\n    }); // Serach Toggle\n\n    $('#top-search').on('click', function (e) {\n      e.preventDefault();\n      navDropdowns.children('.dropdown-menu.show').removeClass('show');\n      $('#search-dropdown').addClass('d-block');\n      return false;\n    }); // hide search on opening other dropdown\n\n    navDropdowns.on('show.bs.dropdown', function () {\n      $('#search-dropdown').removeClass('d-block');\n    });\n  },\n  /**\n   * Initilizes the menu\n   */\n  Topbar.prototype.init = function () {\n    this.initMenu();\n    this.initSearch();\n  }, $.Topbar = new Topbar(), $.Topbar.Constructor = Topbar;\n}(window.jQuery),\n/**\n * RightBar\n * @param {*} $\n */\nfunction ($) {\n  'use strict';\n\n  var RightBar = function RightBar() {\n    this.body = $('body'), this.window = $(window);\n  };\n  /**\n   * Select the option based on saved config\n  */\n\n\n  RightBar.prototype._selectOptionsFromConfig = function () {\n    var config = $.App.getLayoutConfig();\n\n    if (config) {\n      // sideBarTheme\n      switch (config.sideBarTheme) {\n        case 'default':\n          $('#default-check').prop('checked', true);\n          break;\n\n        case 'light':\n          $('#light-check').prop('checked', true);\n          break;\n\n        case 'dark':\n          $('#dark-check').prop('checked', true);\n          break;\n      }\n\n      if (config.isBoxed) {\n        $('#boxed-check').prop('checked', true);\n      } else {\n        $('#fluid-check').prop('checked', true);\n      }\n\n      if (config.isCondensed) $('#condensed-check').prop('checked', true);\n      if (config.isScrollable) $('#scrollable-check').prop('checked', true);\n      if (!config.isScrollable && !config.isCondensed) $('#fixed-check').prop('checked', true); // overall color scheme\n\n      if (!config.isDarkModeEnabled) {\n        $('#light-mode-check').prop('checked', true);\n        if (config.layout === 'vertical') $('input[type=radio][name=theme]').prop('disabled', false);\n      }\n\n      if (config.isDarkModeEnabled) {\n        $('#dark-mode-check').prop('checked', true);\n        if (config.layout === 'vertical') $('input[type=radio][name=theme]').prop('disabled', false);\n      }\n    }\n  },\n  /**\n   * Toggles the right sidebar\n   */\n  RightBar.prototype.toggleRightSideBar = function () {\n    var self = this;\n    self.body.toggleClass('right-bar-enabled');\n\n    self._selectOptionsFromConfig();\n  },\n  /**\n   * Initilizes the right side bar\n   */\n  RightBar.prototype.init = function () {\n    var self = this; // right side-bar toggle\n\n    $(document).on('click', '.right-bar-toggle', function () {\n      self.toggleRightSideBar();\n    });\n    $(document).on('click', 'body', function (e) {\n      if ($(e.target).closest('.right-bar-toggle, .right-bar').length > 0) {\n        return;\n      }\n\n      if ($(e.target).closest('.left-side-menu, .side-nav').length > 0 || $(e.target).hasClass('button-menu-mobile') || $(e.target).closest('.button-menu-mobile').length > 0) {\n        return;\n      }\n\n      $('body').removeClass('right-bar-enabled');\n      $('body').removeClass('sidebar-enable');\n      return;\n    }); // width mode\n\n    $('input[type=radio][name=width]').change(function () {\n      switch ($(this).val()) {\n        case 'fluid':\n          $.App.activateFluid();\n          break;\n\n        case 'boxed':\n          $.App.activateBoxed();\n          break;\n      }\n    }); // theme\n\n    $('input[type=radio][name=theme]').change(function () {\n      switch ($(this).val()) {\n        case 'default':\n          $.App.activateDefaultSidebarTheme();\n          break;\n\n        case 'light':\n          $.App.activateLightSidebarTheme();\n          break;\n\n        case 'dark':\n          $.App.activateDarkSidebarTheme();\n          break;\n      }\n    }); // compact\n\n    $('input[type=radio][name=compact]').change(function () {\n      switch ($(this).val()) {\n        case 'fixed':\n          $.App.deactivateCondensedSidebar();\n          $.App.deactivateScrollableSidebar();\n          break;\n\n        case 'scrollable':\n          $.App.activateScrollableSidebar();\n          break;\n\n        case 'condensed':\n          $.App.activateCondensedSidebar();\n          break;\n      }\n    }); // overall color scheme\n\n    $('input[type=radio][name=color-scheme-mode]').change(function () {\n      switch ($(this).val()) {\n        case 'light':\n          $.App.deactivateDarkMode();\n          $.App.activateDefaultSidebarTheme();\n          $('#default-check').prop('checked', true);\n          $('input[type=radio][name=theme]').prop('disabled', false);\n          break;\n\n        case 'dark':\n          $.App.activateDarkMode();\n          $('#dark-check').prop('checked', true); // $('input[type=radio][name=theme]').prop('disabled', true);\n\n          break;\n      }\n    }); // reset\n\n    $('#resetBtn').on('click', function (e) {\n      e.preventDefault(); // reset to default\n\n      $.App.resetLayout(function () {\n        self._selectOptionsFromConfig();\n      });\n    });\n  }, $.RightBar = new RightBar(), $.RightBar.Constructor = RightBar;\n}(window.jQuery),\n/**\n * Layout and theme manager\n * @param {*} $\n */\nfunction ($) {\n  'use strict'; // Layout and theme manager\n\n  var SIDEBAR_THEME_DEFAULT = 'default';\n  var SIDEBAR_THEME_LIGHT = 'light';\n  var SIDEBAR_THEME_DARK = 'dark';\n  var DEFAULT_CONFIG = {\n    sideBarTheme: SIDEBAR_THEME_DEFAULT,\n    isBoxed: false,\n    isCondensed: false,\n    isScrollable: false,\n    isDarkModeEnabled: false\n  };\n\n  var LayoutThemeApp = function LayoutThemeApp() {\n    this.body = $('body'), this.window = $(window), this._config = {};\n    this.defaultSelectedStyle = null;\n  };\n  /**\n  * Preserves the config\n  */\n\n\n  LayoutThemeApp.prototype._saveConfig = function (newConfig) {\n    $.extend(this._config, newConfig); // sessionStorage.setItem('_HYPER_CONFIG_', JSON.stringify(this._config));\n  },\n  /**\n   * Get the stored config\n   */\n  LayoutThemeApp.prototype._getStoredConfig = function () {\n    var bodyConfig = this.body.data('layoutConfig');\n    var config = DEFAULT_CONFIG;\n\n    if (bodyConfig) {\n      config['sideBarTheme'] = bodyConfig['leftSideBarTheme'];\n      config['isBoxed'] = bodyConfig['layoutBoxed'];\n      config['isCondensed'] = bodyConfig['leftSidebarCondensed'];\n      config['isScrollable'] = bodyConfig['leftSidebarScrollable'];\n      config['isDarkModeEnabled'] = bodyConfig['darkMode'];\n    }\n\n    return config;\n  },\n  /**\n  * Apply the given config and sets the layout and theme\n  */\n  LayoutThemeApp.prototype._applyConfig = function () {\n    var self = this; // getting the saved config if available\n\n    this._config = this._getStoredConfig(); // activate menus\n\n    $.LeftSidebar.init(); // sets the theme\n\n    switch (self._config.sideBarTheme) {\n      case SIDEBAR_THEME_DARK:\n        {\n          self.activateDarkSidebarTheme();\n          break;\n        }\n\n      case SIDEBAR_THEME_LIGHT:\n        {\n          self.activateLightSidebarTheme();\n          break;\n        }\n    } // enable or disable the dark mode\n\n\n    if (self._config.isDarkModeEnabled) self.activateDarkMode();else self.deactivateDarkMode(); // sets the boxed\n\n    if (self._config.isBoxed) self.activateBoxed(); // sets condensed view\n\n    if (self._config.isCondensed) self.activateCondensedSidebar(); // sets scrollable navbar\n\n    if (self._config.isScrollable) self.activateScrollableSidebar();\n  },\n  /**\n   * Initilizes the layout\n   */\n  LayoutThemeApp.prototype._adjustLayout = function () {\n    // in case of small size, add class enlarge to have minimal menu\n    if (this.window.width() >= 750 && this.window.width() <= 1028) {\n      this.activateCondensedSidebar(true);\n    } else {\n      var config = this._getStoredConfig();\n\n      if (!config.isCondensed && !config.isScrollable) this.deactivateCondensedSidebar();\n    }\n  },\n  /**\n   * Activate fluid mode\n   */\n  LayoutThemeApp.prototype.activateFluid = function () {\n    this._saveConfig({\n      isBoxed: false\n    });\n\n    this.body.attr('data-layout-mode', 'fluid');\n  },\n  /**\n   * Activate boxed mode\n   */\n  LayoutThemeApp.prototype.activateBoxed = function () {\n    this._saveConfig({\n      isBoxed: true\n    });\n\n    this.body.attr('data-layout-mode', 'boxed');\n  },\n  /**\n   * Activates the condensed side bar\n   */\n  LayoutThemeApp.prototype.activateCondensedSidebar = function (ignoreToStore) {\n    if (!ignoreToStore) {\n      this._saveConfig({\n        isCondensed: true,\n        isScrollable: false\n      });\n    }\n\n    $.LeftSidebar.activateCondensedSidebar();\n  },\n  /**\n   * Deactivates the condensed side bar\n   */\n  LayoutThemeApp.prototype.deactivateCondensedSidebar = function () {\n    this._saveConfig({\n      isCondensed: false\n    });\n\n    $.LeftSidebar.deactivateCondensedSidebar();\n  };\n  /**\n   * Activates the scrollable sidenar\n   */\n\n  LayoutThemeApp.prototype.activateScrollableSidebar = function () {\n    this._saveConfig({\n      isScrollable: true,\n      isCondensed: false\n    });\n\n    $.LeftSidebar.activateScrollableSidebar();\n  },\n  /**\n   * Deactivates the scrollable sidenar\n   */\n  LayoutThemeApp.prototype.deactivateScrollableSidebar = function () {\n    this._saveConfig({\n      isScrollable: false\n    });\n\n    $.LeftSidebar.deactivateScrollableSidebar();\n  },\n  /**\n   * Activates the default theme\n   */\n  LayoutThemeApp.prototype.activateDefaultSidebarTheme = function () {\n    $.LeftSidebar.activateDefaultTheme();\n\n    this._saveConfig({\n      sideBarTheme: SIDEBAR_THEME_DEFAULT\n    });\n  },\n  /**\n   * Activates the light theme\n   */\n  LayoutThemeApp.prototype.activateLightSidebarTheme = function () {\n    // this._resetLayout();\n    $.LeftSidebar.activateLightTheme();\n\n    this._saveConfig({\n      sideBarTheme: SIDEBAR_THEME_LIGHT\n    });\n  },\n  /**\n   * Activates the dark theme\n   */\n  LayoutThemeApp.prototype.activateDarkSidebarTheme = function () {\n    // this._resetLayout();\n    $.LeftSidebar.activateDarkTheme();\n\n    this._saveConfig({\n      sideBarTheme: SIDEBAR_THEME_DARK\n    });\n  },\n  /**\n   * toggle the dark mode\n   */\n  LayoutThemeApp.prototype.activateDarkMode = function () {\n    $(\"#light-style\").attr(\"disabled\", true);\n    $(\"#dark-style\").attr(\"disabled\", false);\n    $.LeftSidebar.activateDarkTheme();\n\n    this._saveConfig({\n      isDarkModeEnabled: true,\n      sideBarTheme: SIDEBAR_THEME_DARK\n    });\n  };\n  /**\n   * Deactivate the dark mode\n   */\n\n  LayoutThemeApp.prototype.deactivateDarkMode = function () {\n    $(\"#light-style\").attr(\"disabled\", false);\n    $(\"#dark-style\").attr(\"disabled\", true);\n\n    this._saveConfig({\n      isDarkModeEnabled: false\n    });\n  };\n  /**\n   * Clear out the saved config\n   */\n\n\n  LayoutThemeApp.prototype.clearSavedConfig = function () {\n    this._config = DEFAULT_CONFIG;\n  },\n  /**\n   * Gets the config\n   */\n  LayoutThemeApp.prototype.getConfig = function () {\n    return this._config;\n  },\n  /**\n   * Reset to default\n   */\n  LayoutThemeApp.prototype.reset = function (callback) {\n    this.clearSavedConfig();\n    var self = this;\n\n    if ($(\"#main-style-container\").length) {\n      self.defaultSelectedStyle = $(\"#main-style-container\").attr('href');\n    }\n\n    self.deactivateCondensedSidebar();\n    self.deactivateDarkMode();\n    self.activateDefaultSidebarTheme();\n    self.activateFluid(); // calling the call back to let the caller know that it's done\n\n    callback();\n  },\n  /**\n   *\n   */\n  LayoutThemeApp.prototype.init = function () {\n    var self = this;\n\n    if ($(\"#main-style-container\").length) {\n      self.defaultSelectedStyle = $(\"#main-style-container\").attr('href');\n    } // initilize the menu\n\n\n    this._applyConfig(); // adjust layout based on width\n\n\n    this._adjustLayout(); // on window resize, make menu flipped automatically\n\n\n    this.window.on('resize', function (e) {\n      e.preventDefault();\n\n      self._adjustLayout();\n    }); // topbar\n\n    $.Topbar.init();\n  }, $.LayoutThemeApp = new LayoutThemeApp(), $.LayoutThemeApp.Constructor = LayoutThemeApp;\n}(window.jQuery);\n/**\n * Theme: Hyper - Responsive Bootstrap 4 Admin Dashboard\n * Author: Coderthemes\n * Module/App: Main Js\n */\n\n!function ($) {\n  \"use strict\";\n  /**\n  Portlet Widget\n  */\n\n  var Portlet = function Portlet() {\n    this.$body = $(\"body\"), this.$portletIdentifier = \".card\", this.$portletCloser = '.card a[data-toggle=\"remove\"]', this.$portletRefresher = '.card a[data-toggle=\"reload\"]';\n  }; //on init\n\n\n  Portlet.prototype.init = function () {\n    // Panel closest\n    var $this = this;\n    $(document).on(\"click\", this.$portletCloser, function (ev) {\n      ev.preventDefault();\n      var $portlet = $(this).closest($this.$portletIdentifier);\n      var $portlet_parent = $portlet.parent();\n      $portlet.remove();\n\n      if ($portlet_parent.children().length == 0) {\n        $portlet_parent.remove();\n      }\n    }); // Panel Reload\n\n    $(document).on(\"click\", this.$portletRefresher, function (ev) {\n      ev.preventDefault();\n      var $portlet = $(this).closest($this.$portletIdentifier); // This is just a simulation, nothing is going to be reloaded\n\n      $portlet.append('<div class=\"card-disabled\"><div class=\"card-portlets-loader\"></div></div>');\n      var $pd = $portlet.find('.card-disabled');\n      setTimeout(function () {\n        $pd.fadeOut('fast', function () {\n          $pd.remove();\n        });\n      }, 500 + 300 * (Math.random() * 5));\n    });\n  }, //\n  $.Portlet = new Portlet(), $.Portlet.Constructor = Portlet;\n}(window.jQuery), function ($) {\n  'use strict';\n\n  var AdvanceFormApp = function AdvanceFormApp() {\n    this.$body = $('body'), this.$window = $(window);\n  };\n  /**\n   * Initlizes the select2\n  */\n\n\n  AdvanceFormApp.prototype.initSelect2 = function () {\n    // Select2\n    $('[data-toggle=\"select2\"]').select2();\n  },\n  /**\n   * Initlized mask\n  */\n  AdvanceFormApp.prototype.initMask = function () {\n    $('[data-toggle=\"input-mask\"]').each(function (idx, obj) {\n      var maskFormat = $(obj).data(\"maskFormat\");\n      var reverse = $(obj).data(\"reverse\");\n      if (reverse != null) $(obj).mask(maskFormat, {\n        'reverse': reverse\n      });else $(obj).mask(maskFormat);\n    });\n  }, // Datetime and date range picker\n  AdvanceFormApp.prototype.initDateRange = function () {\n    var defaultOptions = {\n      \"cancelClass\": \"btn-light\",\n      \"applyButtonClasses\": \"btn-success\"\n    }; // date pickers\n\n    $('[data-toggle=\"date-picker\"]').each(function (idx, obj) {\n      var objOptions = $.extend({}, defaultOptions, $(obj).data());\n      $(obj).daterangepicker(objOptions);\n    }); //date pickers ranges only\n\n    var start = moment().subtract(29, 'days');\n    var end = moment();\n    var defaultRangeOptions = {\n      startDate: start,\n      endDate: end,\n      ranges: {\n        'Today': [moment(), moment()],\n        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n        'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n        'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n        'This Month': [moment().startOf('month'), moment().endOf('month')],\n        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n      }\n    };\n    $('[data-toggle=\"date-picker-range\"]').each(function (idx, obj) {\n      var objOptions = $.extend({}, defaultRangeOptions, $(obj).data());\n      var target = objOptions[\"targetDisplay\"]; //rendering\n\n      $(obj).daterangepicker(objOptions, function (start, end) {\n        if (target) $(target).html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));\n      });\n    });\n  }, // time picker\n  AdvanceFormApp.prototype.initTimePicker = function () {\n    var defaultOptions = {\n      \"showSeconds\": true,\n      \"icons\": {\n        \"up\": \"mdi mdi-chevron-up\",\n        \"down\": \"mdi mdi-chevron-down\"\n      }\n    }; // time picker\n\n    $('[data-toggle=\"timepicker\"]').each(function (idx, obj) {\n      var objOptions = $.extend({}, defaultOptions, $(obj).data());\n      $(obj).timepicker(objOptions);\n    });\n  }, // touchspin\n  AdvanceFormApp.prototype.initTouchspin = function () {\n    var defaultOptions = {}; // touchspin\n\n    $('[data-toggle=\"touchspin\"]').each(function (idx, obj) {\n      var objOptions = $.extend({}, defaultOptions, $(obj).data());\n      $(obj).TouchSpin(objOptions);\n    });\n  }, // maxlength\n  AdvanceFormApp.prototype.initMaxlength = function () {\n    var defaultOptions = {\n      warningClass: \"badge badge-success\",\n      limitReachedClass: \"badge badge-danger\",\n      separator: ' out of ',\n      preText: 'You typed ',\n      postText: ' chars available.',\n      placement: 'bottom'\n    }; // maxlength\n\n    $('[data-toggle=\"maxlength\"]').each(function (idx, obj) {\n      var objOptions = $.extend({}, defaultOptions, $(obj).data());\n      $(obj).maxlength(objOptions);\n    });\n  },\n  /**\n   * Initilize\n  */\n  AdvanceFormApp.prototype.init = function () {\n    this.initSelect2();\n    this.initMask();\n    this.initDateRange();\n    this.initTimePicker();\n    this.initTouchspin();\n    this.initMaxlength();\n  }, $.AdvanceFormApp = new AdvanceFormApp(), $.AdvanceFormApp.Constructor = AdvanceFormApp;\n}(window.jQuery), function ($) {\n  'use strict';\n\n  var NotificationApp = function NotificationApp() {};\n  /**\n   * Send Notification\n   * @param {*} heading heading text\n   * @param {*} body body text\n   * @param {*} position position e.g top-right, top-left, bottom-left, etc\n   * @param {*} loaderBgColor loader background color\n   * @param {*} icon icon which needs to be displayed\n   * @param {*} hideAfter automatically hide after seconds\n   * @param {*} stack\n   */\n\n\n  NotificationApp.prototype.send = function (heading, body, position, loaderBgColor, icon, hideAfter, stack, showHideTransition) {\n    // default\n    if (!hideAfter) hideAfter = 3000;\n    if (!stack) stack = 1;\n    var options = {\n      heading: heading,\n      text: body,\n      position: position,\n      loaderBg: loaderBgColor,\n      icon: icon,\n      hideAfter: hideAfter,\n      stack: stack\n    };\n    if (showHideTransition) options.showHideTransition = showHideTransition;else options.showHideTransition = 'fade';\n    $.toast().reset('all');\n    $.toast(options);\n  }, $.NotificationApp = new NotificationApp(), $.NotificationApp.Constructor = NotificationApp;\n}(window.jQuery), function ($) {\n  \"use strict\";\n\n  var Components = function Components() {}; //initializing tooltip\n\n\n  Components.prototype.initTooltipPlugin = function () {\n    $.fn.tooltip && $('[data-toggle=\"tooltip\"]').tooltip();\n  }, //initializing popover\n  Components.prototype.initPopoverPlugin = function () {\n    $.fn.popover && $('[data-toggle=\"popover\"]').popover();\n  }, //initializing toast\n  Components.prototype.initToastPlugin = function () {\n    $.fn.toast && $('[data-toggle=\"toast\"]').toast();\n  }, //initializing form validation\n  Components.prototype.initFormValidation = function () {\n    $(\".needs-validation\").on('submit', function (event) {\n      $(this).addClass('was-validated');\n\n      if ($(this)[0].checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n\n      return true;\n    });\n  }, Components.prototype.initShowHidePassword = function () {\n    $(\"[data-password]\").on('click', function () {\n      if ($(this).attr('data-password') == \"false\") {\n        $(this).siblings(\"input\").attr(\"type\", \"text\");\n        $(this).attr('data-password', 'true');\n        $(this).addClass(\"show-password\");\n      } else {\n        $(this).siblings(\"input\").attr(\"type\", \"password\");\n        $(this).attr('data-password', 'false');\n        $(this).removeClass(\"show-password\");\n      }\n    });\n  }, Components.prototype.initMultiDropdown = function () {\n    $('.dropdown-menu a.dropdown-toggle').on('click', function () {\n      if (!$(this).next().hasClass('show')) {\n        $(this).parents('.dropdown-menu').first().find('.show').removeClass('show');\n      }\n\n      var $subMenu = $(this).next('.dropdown-menu');\n      $subMenu.toggleClass('show');\n      return false;\n    });\n  }, Components.prototype.initSyntaxHighlight = function () {\n    //syntax\n    var entityMap = {\n      \"&\": \"&amp;\",\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      '\"': '&quot;',\n      \"'\": '&#39;',\n      \"/\": '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n      return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n        return entityMap[s];\n      });\n    }\n\n    $(document).ready(function (e) {\n      document.querySelectorAll(\"pre span.escape\").forEach(function (element, n) {\n        if (element.classList.contains(\"escape\")) {\n          var text = element.innerText;\n        } else {\n          var text = element.innerText;\n        }\n\n        text = text.replace(/^\\n/, '').trimRight(); // goodbye starting whitespace\n\n        var to_kill = Infinity;\n        var lines = text.split(\"\\n\");\n\n        for (var i = 0; i < lines.length; i++) {\n          if (!lines[i].trim()) {\n            continue;\n          }\n\n          to_kill = Math.min(lines[i].search(/\\S/), to_kill);\n        }\n\n        var out = [];\n\n        for (var i = 0; i < lines.length; i++) {\n          out.push(lines[i].replace(new RegExp(\"^ {\" + to_kill + \"}\", \"g\"), \"\"));\n        }\n\n        element.innerText = out.join(\"\\n\");\n      });\n      document.querySelectorAll('pre span.escape').forEach(function (block) {\n        hljs.highlightBlock(block);\n      });\n    });\n  }, //initilizing\n  Components.prototype.init = function () {\n    this.initTooltipPlugin(), this.initPopoverPlugin(), this.initToastPlugin(), this.initFormValidation(), this.initShowHidePassword(), this.initMultiDropdown(), this.initSyntaxHighlight();\n  }, $.Components = new Components(), $.Components.Constructor = Components;\n}(window.jQuery), function ($) {\n  'use strict';\n\n  var App = function App() {\n    this.$body = $('body'), this.$window = $(window);\n  };\n  /**\n   * Activates the default theme\n   */\n\n\n  App.prototype.activateDefaultSidebarTheme = function () {\n    $.LayoutThemeApp.activateDefaultSidebarTheme();\n  },\n  /**\n   * Activates the light theme\n   */\n  App.prototype.activateLightSidebarTheme = function () {\n    $.LayoutThemeApp.activateLightSidebarTheme();\n  },\n  /**\n   * Activates the dark theme\n   */\n  App.prototype.activateDarkSidebarTheme = function () {\n    $.LayoutThemeApp.activateDarkSidebarTheme();\n  },\n  /**\n   * Activates the condensed sidebar\n   */\n  App.prototype.activateCondensedSidebar = function () {\n    $.LayoutThemeApp.activateCondensedSidebar();\n  },\n  /**\n   * Deactivates the condensed sidebar\n   */\n  App.prototype.deactivateCondensedSidebar = function () {\n    $.LayoutThemeApp.deactivateCondensedSidebar();\n  },\n  /**\n   * Activates the scrollable sidebar\n   */\n  App.prototype.activateScrollableSidebar = function () {\n    $.LayoutThemeApp.activateScrollableSidebar();\n  },\n  /**\n   * Deactivates the scrollable\n   */\n  App.prototype.deactivateScrollableSidebar = function () {\n    $.LayoutThemeApp.deactivateScrollableSidebar();\n  },\n  /**\n   * Activates the boxed mode\n   */\n  App.prototype.activateBoxed = function () {\n    $.LayoutThemeApp.activateBoxed();\n  },\n  /**\n   * Activate the fluid mode\n   */\n  App.prototype.activateFluid = function () {\n    $.LayoutThemeApp.activateFluid();\n  },\n  /**\n   * Toggle the dark mode\n   */\n  App.prototype.activateDarkMode = function () {\n    $.LayoutThemeApp.activateDarkMode();\n  },\n  /**\n   * Deactivate the dark mode\n   */\n  App.prototype.deactivateDarkMode = function () {\n    $.LayoutThemeApp.deactivateDarkMode();\n  },\n  /**\n   * clear the saved layout related settings\n   */\n  App.prototype.clearSavedConfig = function () {\n    $.LayoutThemeApp.clearSavedConfig();\n  },\n  /**\n   * Gets the layout config\n   */\n  App.prototype.getLayoutConfig = function () {\n    return $.LayoutThemeApp.getConfig();\n  };\n  /**\n   * Reset the layout\n   */\n\n  App.prototype.resetLayout = function (callback) {\n    $.LayoutThemeApp.reset(callback);\n  },\n  /**\n   * initilizing\n   */\n  App.prototype.init = function () {\n    $.LayoutThemeApp.init(); // remove loading\n\n    setTimeout(function () {\n      document.body.classList.remove('loading');\n    }, 400);\n    $.RightBar.init(); // showing the sidebar on load if user is visiting the page first time only\n\n    var bodyConfig = this.$body.data('layoutConfig');\n\n    if (window.sessionStorage && bodyConfig && bodyConfig.hasOwnProperty('showRightSidebarOnStart') && bodyConfig['showRightSidebarOnStart']) {\n      var alreadyVisited = sessionStorage.getItem(\"_HYPER_VISITED_\");\n\n      if (!alreadyVisited) {\n        $.RightBar.toggleRightSideBar();\n        sessionStorage.setItem(\"_HYPER_VISITED_\", true);\n      }\n    } //creating portles\n\n\n    $.Portlet.init();\n    $.AdvanceFormApp.init();\n    $.Components.init(); // loader - Preloader\n\n    $(window).on('load', function () {\n      $('#status').fadeOut();\n      $('#preloader').delay(350).fadeOut('slow');\n    });\n  }, $.App = new App(), $.App.Constructor = App;\n}(window.jQuery), //initializing main application module\nfunction ($) {\n  \"use strict\";\n\n  $.App.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/theme/js/app.js\n");

/***/ }),

/***/ 0:
/*!*************************************************************!*\
  !*** multi ./resources/js/app.js ./resources/sass/app.scss ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! C:\Users\arxi-\OneDrive\Υπολογιστής\gaiolithos\resources\js\app.js */"./resources/js/app.js");
module.exports = __webpack_require__(/*! C:\Users\arxi-\OneDrive\Υπολογιστής\gaiolithos\resources\sass\app.scss */"./resources/sass/app.scss");


/***/ })

/******/ });